// import 'package:flutter/material.dart';
// import 'package:flutter/services.dart';
// import 'package:flutter_screenutil/flutter_screenutil.dart';
// import 'package:flutter_svg/flutter_svg.dart';
// import 'package:o_connect/core/common_functions.dart';
// import 'package:o_connect/core/screen_configs.dart';
// import 'package:o_connect/ui/utils/base_urls.dart';
// import 'package:o_connect/ui/utils/custom_show_dialog_helper/custom_show_dialog.dart';
// import 'package:o_connect/ui/utils/custom_toast_helper/custom_toast.dart';
// import 'package:o_connect/ui/utils/images/images.dart';
// import 'package:o_connect/ui/views/home_screen/home_screen_provider/home_screen_provider.dart';
// import 'package:o_connect/ui/views/webinar_details/webinar_details_model/meeting_details_model.dart';
// import 'package:provider/provider.dart';
//
// import '../../../../../core/models/auth_models/generate_token_o_connect_model.dart';
// import '../../../../utils/buttons_helper/custom_botton.dart';
// import '../../../../utils/buttons_helper/custom_outline_button.dart';
// import '../../../../utils/colors/colors.dart';
// import '../../../../utils/constant_strings.dart';
// import '../../../../utils/textfield_helper/app_fonts.dart';
//
// class CopyEventInvitationPopup extends StatelessWidget {
//   const CopyEventInvitationPopup({
//     super.key,
//     required this.index,
//     this.userData,
//   });
//   final int index;
//   final GenerateTokenUser? userData;
//
//   @override
//   Widget build(BuildContext context) {
//     return Selector<HomeScreenProvider, List<MeetingDetailsModel>>(
//         selector: (_, homeScreenProvider) => homeScreenProvider.getMeetingList,
//         builder: (_, data, child) {
//           return Column(
//             mainAxisSize: MainAxisSize.min,
//             children: [
//               showDialogCustomHeader(context, headerTitle: "Copy Event Invitation"),
//               Padding(
//                 padding: EdgeInsets.only(left: 16.w, right: 16.w),
//                 child: Visibility(
//                   visible: data.isNotEmpty,
//                   child: ListView(
//                     shrinkWrap: true,
//                     children: [
//                       BuildRowWidget(text: "Event Name  : ", text1: data[index].meetingName.toString()),
//                       BuildRowWidget(text: "Time  : ", text1: "${data[index].meetingDate.toString().toCustomDateFormat("MMM dd yyyy HH:mm a")}  ${data[index].timezone.toString()}"),
//                       BuildRowWidget(text: "Organizer  : ", text1: data[index].username.toString()),
//                       BuildRowWidget(text: "Event ID  : ", text1: data[index].autoGeneratedId.toString()),
//                       if (data[index].meetingPassword != null && data[index].meetingPassword!.isNotEmpty) BuildRowWidget(text: "Passcode  : ", text1: data[index].meetingPassword.toString()),
//
//                       // Column(
//                       //   crossAxisAlignment: CrossAxisAlignment.start,
//                       //   mainAxisAlignment: MainAxisAlignment.start,
//                       //   children: [
//                       //     height20,
//                       //     TextWithFontWidget(
//                       //       text: "Host Trimmed URL",
//                       //       style: w400_14Poppins(color: Theme.of(context).disabledColor),
//                       //     ),
//                       //     UrlWithCopyButton(url: dataList!.participantUrl ?? ""),
//                       //   ],
//                       // ),
//                       // height20,F
//                       // TextWithFontWidget(
//                       //   text: "Host URL",
//                       //   style: w400_14Poppins(color: Theme.of(context).disabledColor),
//                       // ),
//                       // UrlWithCopyButton(
//                       //     url:
//                       //         "${BaseUrls.webinarCopyLinkBaseUrl}/o-connect/webinar/meeting/${dataList?.id}/${dataList!.autoGeneratedId}/${eventByIdResponse!.hostKey.toString()}/${userData?.customerId}/${userData?.accountId}" ??
//                       //             ""),
//
//                       if (data[index].meetingType != "conference") ...[
//                         Column(
//                           crossAxisAlignment: CrossAxisAlignment.start,
//                           mainAxisAlignment: MainAxisAlignment.start,
//                           children: [
//                             height20,
//                             TextWithFontWidget(
//                               text: "Attendee url",
//                               style: w400_14Poppins(color: Theme.of(context).disabledColor),
//                             ),
//                             UrlWithCopyButton(
//                                 url:
//                                     "${BaseUrls.webinarCopyLinkBaseUrl}/o-connect/webinar/meeting/${data[index].id}/${data[index].autoGeneratedId}/${data[index].guestKey.toString()}/${userData?.customerId}/${userData?.accountId}" ??
//                                         ""),
//                           ],
//                         ),
//                         height20,
//                         if (data[index].guestUrl != null && data[index].guestUrl!.isNotEmpty) ...[
//                           TextWithFontWidget(
//                             text: "Attendee Trimmed URL",
//                             style: w400_14Poppins(color: Theme.of(context).disabledColor),
//                           ),
//                           UrlWithCopyButton(url: data[index].guestUrl ?? ""),
//                           height20,
//                         ]
//                       ],
//
//                       TextWithFontWidget(
//                         text: "Speaker url",
//                         style: w400_14Poppins(color: Theme.of(context).disabledColor),
//                       ),
//                       UrlWithCopyButton(
//                           url:
//                               "${BaseUrls.webinarCopyLinkBaseUrl}/o-connect/webinar/meeting/${data[index].id}/${data[index].autoGeneratedId}/${data[index].participantKey.toString()}/${userData?.customerId}/${userData?.accountId}" ??
//                                   ""),
//
//                       if (data[index].participantUrl != null && data[index].participantUrl!.isNotEmpty) ...[
//                         height20,
//                         TextWithFontWidget(
//                           text: "Speaker Trimmed URL",
//                           style: w400_14Poppins(color: Theme.of(context).disabledColor),
//                         ),
//                         UrlWithCopyButton(url: data[index].participantUrl ?? ""),
//                       ],
//                       height20,
//                     ],
//                   ),
//                 ),
//               ),
//               Padding(
//                 padding: EdgeInsets.only(right: 15.w, top: 5.h, bottom: 5.h),
//                 child: Row(
//                   mainAxisAlignment: MainAxisAlignment.end,
//                   children: [
//                     CustomOutlinedButton(
//                       height: 35.h,
//                       buttonTextStyle: w400_13Poppins(color: AppColors.mainBlueColor),
//                       buttonText: ConstantsStrings.cancel,
//                       onTap: () {
//                         Navigator.pop(context);
//                       },
//                     ),
//                     width10,
//                     CustomButton(
//                       width: 160.w,
//                       height: 35.h,
//                       buttonText: "Copy Event Invitation",
//                       buttonTextStyle: w500_13Poppins(color: AppColors.whiteColor),
//                       onTap: () {
//                         String copiedText = """
//                          Join OCONNECT Event
//                                 Event Name: ${data[index].meetingName.toString()}
//                                 Date & Time: ${data[index].meetingDate.toString().toCustomDateFormat("MMM dd yyyy HH:mm a")} ${data[index].timezone.toString()}
//                                 Host: ${data[index].username.toString()}
//                                 Attendee: ${data[index].guestUrl ?? ""}
//                                 Speaker: ${data[index].participantUrl ?? ""}
//                                 Event ID: ${data[index].autoGeneratedId.toString()}
//                                  """;
//                         Clipboard.setData(ClipboardData(text: copiedText));
//                         CustomToast.showSuccessToast(msg: "Link Copied");
//                       },
//                     )
//                   ],
//                 ),
//               ),
//             ],
//           );
//         });
//   }
// }
//
// class UrlWithCopyButton extends StatelessWidget {
//   const UrlWithCopyButton({super.key, required this.url});
//
//   final String url;
//
//   @override
//   Widget build(BuildContext context) {
//     return Row(
//       mainAxisAlignment: MainAxisAlignment.spaceAround,
//       children: [
//         SizedBox(
//           width: ScreenConfig.width * 0.7,
//           child: TextWithFontWidget(
//             text: url,
//             maxLines: 1,
//             overflow: TextOverflow.ellipsis,
//             style: w400_13Poppins(color: Colors.blue),
//           ),
//         ),
//         InkWell(
//           onTap: () {
//             print("the speaker url: $url");
//             Clipboard.setData(ClipboardData(text: url));
//             CustomToast.showSuccessToast(msg: "Link Copied");
//           },
//           child: Container(
//             height: 32.w,
//             width: 32.w,
//             alignment: Alignment.center,
//             decoration: BoxDecoration(border: Border.all(color: AppColors.mainBlueColor), borderRadius: BorderRadius.circular(5.r)),
//             child: SvgPicture.asset(AppImages.urlCopyIcon),
//           ),
//         ),
//         // CustomOutlinedButton(
//         //   buttonTextStyle: w400_13Poppins(color: AppColors.mainBlueColor),
//         //   buttonText: "Copy",
//         //   onTap: () {
//         //     print("the speaker url: $url");
//         //     Clipboard.setData(ClipboardData(text: url));
//         //     CustomToast.showSuccessToast(msg: "Link Copied");
//         //   },
//         // ),
//       ],
//     );
//   }
// }
//
// class BuildRowWidget extends StatelessWidget {
//   const BuildRowWidget({super.key, required this.text, required this.text1});
//
//   final String text;
//   final String text1;
//
//   @override
//   Widget build(BuildContext context) {
//     return Padding(
//       padding: EdgeInsets.only(top: 3.h, bottom: 3.h),
//       child: Row(
//         children: [
//           TextWithFontWidget(
//             text: text,
//             style: w400_14Poppins(color: Theme.of(context).disabledColor),
//           ),
//           TextWithFontWidget(
//             text: text1,
//             style: w400_14Poppins(color: Theme.of(context).hintColor),
//           ),
//         ],
//       ),
//     );
//   }
// }
