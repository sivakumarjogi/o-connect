import 'package:flutter/material.dart';
import 'package:flutter/scheduler.dart';
import 'package:flutter_screenutil/flutter_screenutil.dart';
import 'package:flutter_svg/svg.dart';
import 'package:lottie/lottie.dart';
import 'package:o_connect/core/common_functions.dart';
import 'package:o_connect/ui/utils/colors/colors.dart';
import 'package:o_connect/ui/utils/custom_show_dialog_helper/custom_show_dialog.dart';
import 'package:o_connect/ui/views/webinar_details/webinar_details_provider/webinar_details_provider.dart';
import 'package:o_connect/ui/views/webinar_details/webinar_details_view/past_webinars.dart';
import 'package:o_connect/ui/views/webinar_details/webinar_details_view/save_as_template.dart';
import 'package:oes_chatbot/utils/extensions/sizedbox_extension.dart';
import 'package:provider/provider.dart';

import '../../../utils/images/images.dart';
import '../../../utils/textfield_helper/app_fonts.dart';
import '../../home_screen/home_screen_provider/home_screen_provider.dart';
import '../webinar_details_model/meeting_details_model.dart';

class TransferWebinarWidget extends StatefulWidget {
  TransferWebinarWidget({super.key, this.dataList});

  MeetingDetailsModel? dataList;

  // var finalDate;
  @override
  State<TransferWebinarWidget> createState() => _TransferWebinarWidgetState();
}

class _TransferWebinarWidgetState extends State<TransferWebinarWidget> {
  HomeScreenProvider? homeScreenProvider;
  WebinarDetailsProvider? webinarProvider;

  @override
  void initState() {
    webinarProvider = Provider.of<WebinarDetailsProvider>(context, listen: false);
    homeScreenProvider = Provider.of<HomeScreenProvider>(context, listen: false);
    SchedulerBinding.instance.addPostFrameCallback((_) {
      homeScreenProvider?.reSetData(context, "transferred");
    });

    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    return Consumer2<WebinarDetailsProvider, HomeScreenProvider>(builder: (context, provider, homeScreenProvider, child) {
      return Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        mainAxisAlignment: MainAxisAlignment.start,
        children: [
          SizedBox(
            height: MediaQuery.of(context).size.height * .8 - 110.sp,
            child: homeScreenProvider.getAllMeetingLoading
                ? Center(
                    child: Lottie.asset(AppImages.loadingJson, height: 50.w, width: 50.w),
                  )
                : homeScreenProvider.getMeetingList.isEmpty
                    ? Center(
                        child: Text(
                        "No records found",
                        style: w400_14Poppins(color: Colors.white),
                      ))
                    : ListView.builder(
                        shrinkWrap: true,
                        itemCount: homeScreenProvider.getMeetingList.length,
                        physics: const BouncingScrollPhysics(),
                        itemBuilder: (context, i) {
                          return Padding(
                            padding: EdgeInsets.symmetric(horizontal: 5.0.sp, vertical: 10.sp),
                            child: Container(
                              padding: EdgeInsets.symmetric(horizontal: 20.w, vertical: 10.h),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(6.r), color: Theme.of(context).cardColor),
                              child: Column(
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: [
                                  5.h.height,
                                  Container(
                                    decoration: BoxDecoration(borderRadius: BorderRadius.circular(6), color: const Color(0xff0063F7).withOpacity(0.2)),
                                    child: Padding(
                                      padding: EdgeInsets.all(6.0.sp),
                                      child: Text(
                                        "Transferred",
                                        style: w500_10Poppins(color: const Color(0xff0063F7)),
                                      ),
                                    ),
                                  ),
                                  5.h.height,
                                  Text(
                                    homeScreenProvider.getMeetingList[i].meetingName!,
                                    style: w500_14Poppins(color: Theme.of(context).hintColor),
                                  ),
                                  5.h.height,
                                  Text(
                                    homeScreenProvider.getMeetingList[i].autoGeneratedId.toString(),
                                    style: w400_13Poppins(color: Theme.of(context).primaryColorLight),
                                  ),
                                  10.h.height,
                                  Row(
                                    children: [
                                      SvgPicture.asset(AppImages.profileIcon),
                                      10.w.width,
                                      Text(
                                        homeScreenProvider.getMeetingList[i].username!,
                                        style: w400_13Poppins(color: Theme.of(context).primaryColorLight),
                                      )
                                    ],
                                  ),
                                  10.h.height,
                                  Row(
                                    children: [
                                      SvgPicture.asset(AppImages.calendarEvent),
                                      10.w.width,
                                      Text(
                                        homeScreenProvider.getMeetingList[i].meetingDate.toString().toCustomDateFormat("MMM dd, yyyy HH:mm").toString(),
                                        style: w400_13Poppins(color: Theme.of(context).primaryColorLight),
                                      )
                                    ],
                                  ),
                                  10.h.height,
                                  InkWell(
                                    onTap: () {
                                      showModalBottomSheet(
                                          isScrollControlled: true,
                                          isDismissible: false,
                                          backgroundColor: Theme.of(context).scaffoldBackgroundColor,
                                          shape: RoundedRectangleBorder(borderRadius: BorderRadius.only(topRight: Radius.circular(24.r), topLeft: Radius.circular(24.r))),
                                          context: context,
                                          builder: (context) {
                                            return Padding(
                                              padding: EdgeInsets.symmetric(horizontal: 15.w, vertical: 8.h),
                                              child: Column(
                                                mainAxisSize: MainAxisSize.min,
                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                children: [
                                                  Align(
                                                    alignment: Alignment.center,
                                                    child: Container(
                                                      height: 5.h,
                                                      width: 100.w,
                                                      decoration: BoxDecoration(borderRadius: BorderRadius.circular(20.r), color: const Color(0xff202223)),
                                                    ),
                                                  ),
                                                  25.h.height,
                                                  Row(
                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                    children: [
                                                      Text(
                                                        "Details",
                                                        style: w500_14Poppins(color: Colors.white),
                                                      ),
                                                      GestureDetector(
                                                        onTap: () {
                                                          Navigator.pop(context);
                                                        },
                                                        child: const Icon(
                                                          Icons.cancel,
                                                          size: 24,
                                                          color: Color(0xff5E6272),
                                                        ),
                                                      ),
                                                    ],
                                                  ),
                                                  const Divider(),
                                                  10.h.height,
                                                  Container(
                                                    decoration: BoxDecoration(borderRadius: BorderRadius.circular(6), color: const Color(0xff0063F7)),
                                                    child: Padding(
                                                      padding: EdgeInsets.all(6.0.sp),
                                                      child: Text(
                                                        "TRANSFERRED",
                                                        style: w500_10Poppins(color: Colors.white),
                                                      ),
                                                    ),
                                                  ),
                                                  5.h.height,
                                                  Text(
                                                    homeScreenProvider.getMeetingList[i].meetingName!,
                                                    style: w500_14Poppins(color: Theme.of(context).hintColor),
                                                  ),
                                                  5.h.height,
                                                  Text(
                                                    homeScreenProvider.getMeetingList[i].autoGeneratedId.toString(),
                                                    style: w400_13Poppins(color: Theme.of(context).primaryColorLight),
                                                  ),
                                                  10.h.height,
                                                  Text(
                                                    "Date & Time",
                                                    style: w400_13Poppins(color: Theme.of(context).primaryColorLight),
                                                  ),
                                                  5.h.height,
                                                  Text(
                                                    homeScreenProvider.getMeetingList[i].meetingDate.toString().toCustomDateFormat("MMM dd, yyyy HH:mm").toString(),
                                                    style: w500_14Poppins(color: Theme.of(context).hintColor),
                                                  ),
                                                  10.h.height,
                                                  Text(
                                                    "Transferred to",
                                                    style: w400_13Poppins(color: Theme.of(context).primaryColorLight),
                                                  ),
                                                  5.h.height,
                                                  Text(
                                                    homeScreenProvider.getMeetingList[i].username!,
                                                    style: w500_14Poppins(color: Theme.of(context).hintColor),
                                                  ),
                                                  10.h.height,
                                                  Text(
                                                    "Transferred Date",
                                                    style: w400_13Poppins(color: Theme.of(context).primaryColorLight),
                                                  ),
                                                  5.h.height,
                                                  Text(
                                                    homeScreenProvider.getMeetingList[i].meetingDate.toString().toCustomDateFormat("MMM dd, yyyy HH:mm").toString(),
                                                    style: w500_14Poppins(color: Theme.of(context).hintColor),
                                                  ),
                                                  10.h.height,
                                                  Text(
                                                    "Event Type",
                                                    style: w400_13Poppins(color: Theme.of(context).primaryColorLight),
                                                  ),
                                                  5.h.height,
                                                  Text(
                                                    homeScreenProvider.getMeetingList[i].meetingType!,
                                                    style: w500_14Poppins(color: Theme.of(context).hintColor),
                                                  ),
                                                  30.h.height,
                                                  Row(
                                                    mainAxisAlignment: MainAxisAlignment.spaceAround,
                                                    children: [
                                                      InkWell(
                                                        onTap: () {
                                                          customShowDialog(context, DeleteBottomSheetForPastEvent(onTap: () {
                                                            Provider.of<HomeScreenProvider>(context, listen: false)
                                                                .deletePastMeeting(meetingId: homeScreenProvider.getMeetingList[i].id ?? "00", context: context, meetingType: "transferred");
                                                          }));
                                                        },
                                                        child: Container(
                                                            width: MediaQuery.of(context).size.width / 2 - 30.sp,
                                                            height: 40.h,
                                                            decoration: BoxDecoration(borderRadius: BorderRadius.circular(3), color: const Color(0xff1B2632)),
                                                            child: Center(
                                                              child: Text(
                                                                "Delete",
                                                                style: w400_14Poppins(color: Colors.white),
                                                              ),
                                                            )),
                                                      ),
                                                      InkWell(
                                                        onTap: () {
                                                          customShowDialog(context, SaveAsTemplate(dataList: homeScreenProvider.getMeetingList[i]));
                                                        },
                                                        child: Container(
                                                            width: MediaQuery.of(context).size.width / 2 - 30.sp,
                                                            height: 40.h,
                                                            decoration: BoxDecoration(borderRadius: BorderRadius.circular(3), color: Colors.blue),
                                                            child: Center(
                                                              child: Text(
                                                                "Save as",
                                                                style: w400_14Poppins(color: Colors.white),
                                                              ),
                                                            )),
                                                      ),
                                                    ],
                                                  ),
                                                ],
                                              ),
                                            );
                                          });
                                    },
                                    child: Container(
                                      // width: 80.w,
                                      height: 40.h,
                                      decoration: BoxDecoration(borderRadius: BorderRadius.circular(3), color: const Color(0xff1B2632)),
                                      child: Center(
                                        child: Text(
                                          "View",
                                          style: w400_14Poppins(color: Colors.white),
                                        ),
                                      ),
                                    ),
                                  ),
                                  height10,
                                ],
                              ),
                            ),
                          );
                        }),
          )
        ],
      );
    });
  }
}

//  Container(
//           decoration: BoxDecoration(
//               borderRadius: BorderRadius.only(
//                 topRight: Radius.circular(8.r),
//                 topLeft: Radius.circular(8.r),
//               ),
//               color: Theme.of(context).highlightColor),
//           child: Padding(
//             padding: EdgeInsets.all(12.0.sp),
//             child: Row(
//               mainAxisAlignment: MainAxisAlignment.spaceBetween,
//               crossAxisAlignment: CrossAxisAlignment.center,
//               children: [
//                 Expanded(
//                   child: Column(
//                     crossAxisAlignment: CrossAxisAlignment.start,
//                     children: [
//                       SizedBox(
//                         width: MediaQuery.of(context).size.width * 0.6,
//                         child: Text(widget.dataList.meetingName!,
//                             overflow: TextOverflow.ellipsis,
//                             style: w400_14Poppins(
//                                 color: Theme.of(context).hintColor)),
//                       ),
//                       height5,
//                       Text(
//                         widget.dataList.autoGeneratedId!.toString(),
//                         style: w300_10Poppins(
//                             color: Theme.of(context).disabledColor),
//                       )
//                     ],
//                   ),
//                 ),

//                 InkWell(
//                     onTap: () {
//                       customShowDialog(context, DeleteBottomSheetForPastEvent(
//                         isTransfer:false,
//                         onTap: () async {
//                           Provider.of<HomeScreenProvider>(context, listen: false).deletePastMeeting(meetingId: widget.dataList.id ?? "00", context: context);
//                         },
//                       ));
//                     },
//                     child: SvgPicture.asset(
//                       AppImages.delete,
//                       color: const Color(0xFF8186B3),
//                     )),
//               ],
//             ),
//           ),
//         ),
//         Row(
//           crossAxisAlignment: CrossAxisAlignment.start,
//           children: [
//             Expanded(
//               child: Padding(
//                 padding: EdgeInsets.only(left: 15.w, top: 15.h),
//                 child: Column(
//                   crossAxisAlignment: CrossAxisAlignment.start,
//                   children: [
//                     TextWithFontWidget(
//                       text: ConstantsStrings.dateAndTime,
//                       style: w300_12Poppins(
//                           color: Theme.of(context).disabledColor),
//                     ),
//                     height5,
//                     TextWithFontWidget(
//                       text: widget.finalDate,
//                       style:
//                       w400_13Poppins(color: Theme.of(context).hintColor),
//                     ),
//                     height10,
//                     TextWithFontWidget(
//                       text: "Organizer",
//                       style: w300_12Poppins(
//                           color: Theme.of(context).disabledColor),
//                     ),
//                     height5,
//                     TextWithFontWidget(
//                       text: widget.dataList.username!,
//                       style:
//                       w400_13Poppins(color: Theme.of(context).hintColor),
//                     ),
//                     height10,
//                   ],
//                 ),
//               ),
//             ),
//             Expanded(
//               child: Padding(
//                 padding: EdgeInsets.only(left: 15.w, top: 15.h),
//                 child: Column(
//                   crossAxisAlignment: CrossAxisAlignment.start,
//                   mainAxisAlignment: MainAxisAlignment.start,
//                   children: [
//                     TextWithFontWidget(
//                       text: "Duration",
//                       style: w300_12Poppins(
//                           color: Theme.of(context).disabledColor),
//                     ),
//                     height5,
//                     TextWithFontWidget(
//                       text:
//                       "${widget.dataList.duration.toString().split(":").first} Hrs ${widget.dataList.duration.toString().split(":").last} Mins",
//                       style:
//                       w400_13Poppins(color: Theme.of(context).hintColor),
//                     ),
//                     height10,
//                     TextWithFontWidget(
//                       text: "Time Zone",
//                       style: w300_12Poppins(
//                           color: Theme.of(context).disabledColor),
//                     ),
//                     height5,
//                     TextWithFontWidget(
//                       text: widget.dataList.timezone!,
//                       style:
//                       w400_13Poppins(color: Theme.of(context).hintColor),
//                     ),
//                     height10,
//                   ],
//                 ),
//               ),
//             )
//           ],
//         ),
//         Padding(
//           padding: EdgeInsets.only(left: 15.w),
//           child: Column(
//             crossAxisAlignment: CrossAxisAlignment.start,
//             mainAxisAlignment: MainAxisAlignment.start,
//             children: [
//               Text(
//                 "Reason",
//                 style: w300_12Poppins(color: Theme.of(context).disabledColor),
//               ),
//               height5,
//               Text(
//                 widget.dataList.cancelReason ?? "--",
//                 style: w400_12Poppins(color: Theme.of(context).hintColor),
//               )
//             ],
//           ),
//         ),
//         height10
