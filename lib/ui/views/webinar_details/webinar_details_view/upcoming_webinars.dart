// import 'dart:convert';
//
// import 'package:flutter/material.dart';
// import 'package:flutter_screenutil/flutter_screenutil.dart';
// import 'package:o_connect/core/common_functions.dart';
// import 'package:o_connect/core/screen_configs.dart';
// import 'package:o_connect/ui/views/home_screen/home_screen_provider/home_screen_provider.dart';
// import 'package:o_connect/ui/views/meeting_entry_point.dart';
// import 'package:provider/provider.dart';
// import '../../../../core/models/auth_models/generate_token_o_connect_model.dart';
// import '../../../../core/models/create_webinar_model/create_webinar_response_model.dart';
// import '../../../../core/providers/app_global_state_provider.dart';
// import '../../webninar_dashboard/presentation/create_webinar/provider/create_webinar_provider.dart';
// import '../../../../core/service_locator.dart';
// import '../../../../core/user_cache_service.dart';
// import '../../../utils/custom_toast_helper/custom_toast.dart';
// import '../../../utils/loading_helper/loading_indicator.dart';
// import '../../drawer/webinar_drawer/widgets/copy_event_invitation.dart';
// import '../../themes/providers/webinar_themes_provider.dart';
// import '../webinar_details_model/meeting_details_model.dart';
// import 'upcoming_more_button.dart';
// import '../../../utils/buttons_helper/custom_botton.dart';
// import '../../../utils/colors/colors.dart';
// import '../../../utils/constant_strings.dart';
// import '../../../utils/custom_show_dialog_helper/custom_show_dialog.dart';
// import '../../../utils/textfield_helper/app_fonts.dart';
//
// class UpcomingWebinarsWidget extends StatefulWidget {
//   // MeetingDetailsModel? dataList;
//
//   // var finalDate;
//   final int index;
//
//   const UpcomingWebinarsWidget({Key? key, required this.index
//       /*    required this.dataList,
//     required this.finalDate, */
//       })
//       : super(key: key);
//
//   @override
//   State<UpcomingWebinarsWidget> createState() => _UpcomingWebinarsWidgetState();
// }
//
// class _UpcomingWebinarsWidgetState extends State<UpcomingWebinarsWidget> {
//   @override
//   void initState() {
//     super.initState();
//     WidgetsBinding.instance.addPostFrameCallback((_) {
//       context.read<WebinarThemesProviders>().setupDefaultColors();
//       context.read<HomeScreenProvider>().getMeetings(context, searchHistory: "");
//     });
//   }
//
//   @override
//   Widget build(BuildContext context) {
//     return Selector<HomeScreenProvider, List<MeetingDetailsModel>>(
//         selector: (_, homeScreenProvider) => homeScreenProvider.getMeetingList,
//         builder: (_, data, child) {
//           return Container(
//             decoration: BoxDecoration(borderRadius: BorderRadius.circular(8.r), color: Theme.of(context).primaryColor),
//             child: Column(
//               children: [
//                 Container(
//                   decoration: BoxDecoration(
//                       borderRadius: BorderRadius.only(
//                         topRight: Radius.circular(8.r),
//                         topLeft: Radius.circular(8.r),
//                       ),
//                       color: Theme.of(context).highlightColor),
//                   child: Padding(
//                     padding: EdgeInsets.all(12.0.sp),
//                     child: Row(
//                       mainAxisAlignment: MainAxisAlignment.spaceBetween,
//                       crossAxisAlignment: CrossAxisAlignment.center,
//                       children: [
//                         Expanded(
//                           child: Column(
//                             crossAxisAlignment: CrossAxisAlignment.start,
//                             children: [
//                               SizedBox(
//                                 width: MediaQuery.of(context).size.width * 0.6,
//                                 child: Text(data[widget.index].meetingName.toString(), overflow: TextOverflow.ellipsis, style: w400_14Poppins(color: Theme.of(context).hintColor)),
//                               ),
//                               height5,
//                               Text(
//                                 data[widget.index].autoGeneratedId.toString(),
//                                 style: w300_10Poppins(color: Theme.of(context).disabledColor),
//                               )
//                             ],
//                           ),
//                         ),
//                         Consumer<AppGlobalStateProvider>(builder: (_, appGlobalStateProvider, __) {
//                           return CustomButton(
//                             width: 100.w,
//                             height: 40.h,
//                             buttonText: appGlobalStateProvider.isMeetingInProgress ? "In progress" : ConstantsStrings.start,
//                             onTap: () {
//                               if (appGlobalStateProvider.isMeetingInProgress) {
//                                 CustomToast.showErrorToast(msg: "You are already in an another meeting.");
//                               } else {
//                                 tryJoinMeeting(context, isHostJoing: true, meetingId: data[widget.index].id);
//                               }
//                             },
//                           );
//                         }),
//                       ],
//                     ),
//                   ),
//                 ),
//                 Row(
//                   children: [
//                     Expanded(
//                       child: Padding(
//                         padding: EdgeInsets.only(left: 15.w, top: 15.h),
//                         child: Column(
//                           crossAxisAlignment: CrossAxisAlignment.start,
//                           children: [
//                             TextWithFontWidget(
//                               text: ConstantsStrings.dateAndTime,
//                               style: w300_12Poppins(color: Theme.of(context).disabledColor),
//                             ),
//                             height5,
//                             TextWithFontWidget(
//                               text: data[widget.index].meetingDate.toString().toCustomDateFormat("MMM dd, yyyy HH:mm").toString(),
//                               style: w400_13Poppins(color: Theme.of(context).hintColor),
//                             ),
//                             height10,
//                             TextWithFontWidget(
//                               text: "Organizer",
//                               style: w300_12Poppins(color: Theme.of(context).disabledColor),
//                             ),
//                             height5,
//                             TextWithFontWidget(
//                               text: data[widget.index].username.toString(),
//                               style: w400_13Poppins(color: Theme.of(context).hintColor),
//                             ),
//                             height10,
//                             TextWithFontWidget(
//                               text: "Invite link",
//                               style: w300_12Poppins(color: Theme.of(context).disabledColor),
//                             ),
//                             height5,
//                             GestureDetector(
//                               onTap: () async {
//                                 // CustomToast.showInfoToast(msg: "Commin Soon...");
//
//                                 final String? userDataString = await serviceLocator<UserCacheService>().getUserData("userData");
//                                 GenerateTokenUser userData = GenerateTokenUser.fromJson(jsonDecode(userDataString!));
//                                 Map<String, dynamic> payload = {"event_id": data[widget.index].id ?? ""};
//                                 Loading.indicator(context);
//                                 CreateWebinarResponseModel createWebinarResponseModel =
//                                     await Provider.of<CreateWebinarProvider>(context, listen: false).createWebinarRepository.eventDetailsById(payload);
//
//                                 if (context.mounted) {
//                                   Navigator.pop(context);
//                                   customShowDialog(
//                                     context,
//                                     CopyEventInvitationPopup(
//                                       index: widget.index,
//                                       userData: userData,
//                                     ), /* height: MediaQuery.of(context).size.height * 0.7 */
//                                   );
//                                 }
//                               },
//                               child: Row(
//                                 children: [
//                                   Text(
//                                     "https://oconnect...",
//                                     style: w400_13Poppins(color: Colors.blue),
//                                     overflow: TextOverflow.ellipsis,
//                                   ),
//                                   width5,
//                                   Icon(Icons.link, color: Theme.of(context).indicatorColor)
//                                 ],
//                               ),
//                             ),
//                           ],
//                         ),
//                       ),
//                     ),
//                     Expanded(
//                       child: Padding(
//                         padding: EdgeInsets.only(left: 15.w, top: 15.h),
//                         child: Column(
//                           crossAxisAlignment: CrossAxisAlignment.start,
//                           children: [
//                             TextWithFontWidget(
//                               text: "Duration",
//                               style: w300_12Poppins(color: Theme.of(context).disabledColor),
//                             ),
//                             height5,
//                             TextWithFontWidget(
//                               text: "${data[widget.index].duration.toString().split(":").first} Hrs ${data[widget.index].duration.toString().split(":").last} Mins",
//                               style: w400_13Poppins(color: Theme.of(context).hintColor),
//                             ),
//                             height10,
//                             TextWithFontWidget(
//                               text: "Time Zone",
//                               style: w300_12Poppins(color: Theme.of(context).disabledColor),
//                             ),
//                             height5,
//                             TextWithFontWidget(
//                               text: data[widget.index].timezone.toString(),
//                               style: w400_13Poppins(color: Theme.of(context).hintColor),
//                             ),
//                             height10,
//                             TextWithFontWidget(
//                               text: "Passcode",
//                               style: w300_12Poppins(color: Theme.of(context).disabledColor),
//                             ),
//                             height5,
//                             TextWithFontWidget(
//                               // text: widget.dataList!.participantKey.toString(),
//                               text: "--",
//                               style: w400_13Poppins(color: Theme.of(context).hintColor),
//                             ),
//                           ],
//                         ),
//                       ),
//                     )
//                   ],
//                 ),
//                 height5,
//                 CustomButton(
//                   width: 100.w,
//                   buttonText: "More",
//                   buttonTextStyle: w600_14Poppins(color: Theme.of(context).indicatorColor),
//                   buttonColor: const Color(0x330381f5),
//                   onTap: () async {
//                     context.read<WebinarThemesProviders>().setupDefaultColors();
//                     customShowDialog(context, UpcomingMoreButton(dataList: data[widget.index]), height: ScreenConfig.height * 0.4);
//                   },
//                 ),
//                 height5,
//               ],
//             ),
//           );
//         });
//   }
// }
//
import 'package:flutter/material.dart';

class TextWithFontWidget extends StatelessWidget {
  const TextWithFontWidget({super.key, required this.text, required this.style, this.maxLines, this.overflow});

  final String text;
  final TextStyle style;
  final int? maxLines;
  final TextOverflow? overflow;

  @override
  Widget build(BuildContext context) {
    return Text(
      text,
      style: style,
      maxLines: maxLines,
      overflow: overflow,
      textAlign: TextAlign.start,
    );
  }
}
